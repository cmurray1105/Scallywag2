{
  "{\"sourceRoot\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"filename\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar db = require(\"./db/queries\");\n\nvar bodyParser = require(\"body-parser\");\n\nvar PORT = process.env.HTTP_PORT || 8080;\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, \"client\", \"build\")));\napp.use(bodyParser.json());\napp.get(\"/\", function (req, res) {\n  res.send(\"just gonna send it\");\n});\napp.get(\"/flower\", function (req, res) {\n  res.json({\n    name: \"Dandelion\",\n    colour: \"Blue-ish\"\n  });\n});\napp.get(\"/products\", function (req, res) {\n  // console.log('server', req.query.product)\n  db.getProducts(req.query.product, function (err, result) {\n    if (err) {\n      console.log(err);\n    } else {\n      // console.log(result)\n      res.send(result);\n    }\n  });\n});\napp.post(\"/addOrder\", function (req, res) {\n  console.log(\"query\", req.body);\n  var currentDate = new Date().toISOString().slice(0, 19).replace(\"T\", \" \");\n  console.log(\"del date\", req.body.deliveryDate.slice(0, 19).replace(\"T\", \" \"));\n  var order = [req.body.address, req.body.customerName, \"Liberty Hill\", currentDate, req.body.deliveryDate.slice(0, 19).replace(\"T\", \" \"), req.body.neighborhood, req.body.email, req.body.phone]; // console.log(\"order:\", order)\n\n  var id;\n  db.addDelivery(order, function (err, results) {\n    if (err) {\n      res.send(err);\n    } else {\n      // console.log(\"RESULT FROM ADDING\", results.insertId)\n      var _id = results.insertId;\n\n      for (var item in req.body.cartItems) {\n        var params = [req.body.cartItems[item].id, _id, req.body.cartItems[item].quantity];\n        db.addItemToOrder(params, function (err, secondResult) {\n          // console.log(\"callback called\")\n          if (err) {\n            res.send(err);\n          } else {\n            console.log(\"sent: \", secondResult);\n          }\n        });\n      }\n\n      res.send(results);\n    }\n  });\n});\napp.post(\"/updateQuantity\", function (req, res) {\n  console.log(req.body.quantity, req.body.productName);\n  var quantity = [req.body.quantity.toString(), req.body.productName];\n  db.updateQuantity(quantity, function (err, result) {\n    if (err) {\n      res.send(err);\n    } else {\n      res.send(result);\n    }\n  });\n});\napp.get(\"/getOrders\", function (req, res) {\n  db.getOrders(function (err, result) {\n    console.log(\"RESULTTTTT1\", result); // result = result[0]\n\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"type\", result); // res.send(result)\n\n      var orders = {};\n\n      for (var item in result) {\n        console.log(\"ITEM: \", result[item]);\n\n        if (!orders[result[item].id]) {\n          orders[result[item].id] = {\n            customer: result[item].name,\n            address: result[item].street_address,\n            deliveryDate: result[item].scheduled_delivery,\n            neighborhood: result[item].neighborhood,\n            email: result[item].email,\n            phone: result[item].phone,\n            products: [{\n              productName: result[item].product_name,\n              quantity: result[item].quantity,\n              price: result[item].price\n            }]\n          };\n        } else {\n          orders[result[item].id].products.push({\n            productName: result[item].product_name,\n            quantity: result[item].quantity,\n            price: result[item].price\n          });\n        }\n      }\n\n      res.send(orders);\n    }\n  });\n});\napp.listen(PORT, function () {\n  console.log(\"Server listening at port \".concat(PORT, \". cwm\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "db",
        "require",
        "bodyParser",
        "PORT",
        "process",
        "env",
        "HTTP_PORT",
        "app",
        "use",
        "express",
        "path",
        "join",
        "__dirname",
        "json",
        "get",
        "req",
        "res",
        "send",
        "name",
        "colour",
        "getProducts",
        "query",
        "product",
        "err",
        "result",
        "console",
        "log",
        "post",
        "body",
        "currentDate",
        "Date",
        "toISOString",
        "slice",
        "replace",
        "deliveryDate",
        "order",
        "address",
        "customerName",
        "neighborhood",
        "email",
        "phone",
        "id",
        "addDelivery",
        "results",
        "insertId",
        "item",
        "cartItems",
        "params",
        "quantity",
        "addItemToOrder",
        "secondResult",
        "productName",
        "toString",
        "updateQuantity",
        "getOrders",
        "orders",
        "customer",
        "street_address",
        "scheduled_delivery",
        "products",
        "product_name",
        "price",
        "push",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/",
      "sourcesContent": [
        "import path from \"path\";\nimport express from \"express\";\nconst db = require(\"./db/queries\");\n\nconst bodyParser = require(\"body-parser\");\nconst PORT = process.env.HTTP_PORT || 8080;\nconst app = express();\n\napp.use(express.static(path.join(__dirname, \"client\", \"build\")));\napp.use(bodyParser.json());\n\napp.get(\"/\", (req, res) => {\n  res.send(\"just gonna send it\");\n});\napp.get(\"/flower\", (req, res) => {\n  res.json({\n    name: \"Dandelion\",\n    colour: \"Blue-ish\",\n  });\n});\napp.get(\"/products\", (req, res) => {\n  // console.log('server', req.query.product)\n  db.getProducts(req.query.product, (err, result) => {\n    if (err) {\n      console.log(err);\n    } else {\n      // console.log(result)\n      res.send(result);\n    }\n  });\n});\napp.post(\"/addOrder\", (req, res) => {\n  console.log(\"query\", req.body);\n  let currentDate = new Date().toISOString().slice(0, 19).replace(\"T\", \" \");\n  console.log(\"del date\", req.body.deliveryDate.slice(0, 19).replace(\"T\", \" \"));\n  const order = [\n    req.body.address,\n    req.body.customerName,\n    \"Liberty Hill\",\n    currentDate,\n    req.body.deliveryDate.slice(0, 19).replace(\"T\", \" \"),\n    req.body.neighborhood,\n    req.body.email,\n    req.body.phone,\n  ];\n  // console.log(\"order:\", order)\n  let id;\n  db.addDelivery(order, (err, results) => {\n    if (err) {\n      res.send(err);\n    } else {\n      // console.log(\"RESULT FROM ADDING\", results.insertId)\n      let id = results.insertId;\n      for (let item in req.body.cartItems) {\n        let params = [\n          req.body.cartItems[item].id,\n          id,\n          req.body.cartItems[item].quantity,\n        ];\n        db.addItemToOrder(params, (err, secondResult) => {\n          // console.log(\"callback called\")\n          if (err) {\n            res.send(err);\n          } else {\n            console.log(\"sent: \", secondResult);\n          }\n        });\n      }\n      res.send(results);\n    }\n  });\n});\napp.post(\"/updateQuantity\", (req, res) => {\n  console.log(req.body.quantity, req.body.productName);\n  let quantity = [req.body.quantity.toString(), req.body.productName];\n  db.updateQuantity(quantity, (err, result) => {\n    if (err) {\n      res.send(err);\n    } else {\n      res.send(result);\n    }\n  });\n});\napp.get(\"/getOrders\", (req, res) => {\n  db.getOrders((err, result) => {\n    console.log(\"RESULTTTTT1\", result);\n    // result = result[0]\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"type\", result);\n      // res.send(result)\n      let orders = {};\n\n      for (let item in result) {\n        console.log(\"ITEM: \", result[item]);\n        if (!orders[result[item].id]) {\n          orders[result[item].id] = {\n            customer: result[item].name,\n            address: result[item].street_address,\n            deliveryDate: result[item].scheduled_delivery,\n            neighborhood: result[item].neighborhood,\n            email: result[item].email,\n            phone: result[item].phone,\n            products: [\n              {\n                productName: result[item].product_name,\n                quantity: result[item].quantity,\n                price: result[item].price,\n              },\n            ],\n          };\n        } else {\n          orders[result[item].id].products.push({\n            productName: result[item].product_name,\n            quantity: result[item].quantity,\n            price: result[item].price,\n          });\n        }\n      }\n      res.send(orders);\n    }\n  });\n});\n\napp.listen(PORT, () => {\n  console.log(`Server listening at port ${PORT}. cwm`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610211865665
  },
  "{\"sourceRoot\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"filename\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/queries.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/queries.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/queries.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/queries.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
        "sourceFileName": "queries.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar path = require('path'); // require('dotenv').config()\n\n\nvar mysql = require('mysql');\n\nvar logMeIn = require('./secret');\n\nvar connection = mysql.createConnection({\n  host: process.env.RDS_HOSTNAME || logMeIn.HOST,\n  user: process.env.RDS_USERNAME || logMeIn.DB_USER,\n  password: process.env.RDS_PASSWORD || logMeIn.DB_PASSWORD,\n  database: process.env.RDS_DB_NAME || logMeIn.DATABASE\n});\nconnection.connect(function (err) {\n  if (err) {\n    console.log(\"DB CONNECTION FAILED\", err);\n    return;\n  }\n\n  console.log(\"Connected to BBQ DB\");\n  console.log(process.env.DB_PASSWORD);\n});\n\nvar getProducts = function getProducts(category, cb) {\n  connection.query(\"SELECT * FROM product WHERE category = ?;\", [category], function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n};\n\nvar addDelivery = function addDelivery(params, cb) {\n  connection.query('INSERT INTO orders (street_address, name, city, ordered_at, scheduled_delivery, neighborhood, email, phone) VALUES (?, ?, ?, ?, ?, ?, ?, ?);', params, function (err, results) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, results);\n    }\n  });\n};\n\nvar addItemToOrder = function addItemToOrder(params, cb) {\n  // console.log(\"params\", typeof params)\n  connection.query('INSERT INTO order_item (product_id, order_id, quantity) VALUES (?, ?, ?);', params, function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n};\n\nvar getOrders = function getOrders(cb) {\n  connection.query('SELECT orders.id, order_item.quantity, product.product_name, product.price, orders.scheduled_delivery, orders.neighborhood, orders.name, orders.street_address, orders.phone, orders.email FROM ((order_item INNER JOIN product ON order_item.product_id = product.id) INNER JOIN orders on order_item.order_id = orders.id);', function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n      console.log(result);\n    }\n  });\n};\n\nvar updateQuantity = function updateQuantity(params, cb) {\n  console.log(\"params in quantity update\", params);\n  console.log(\"query called\");\n  connection.query('UPDATE product SET QUANTITY =? WHERE product.product_name=?', params, function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n};\n\nmodule.exports = {\n  getProducts: getProducts,\n  getOrders: getOrders,\n  addDelivery: addDelivery,\n  addItemToOrder: addItemToOrder,\n  updateQuantity: updateQuantity\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXJpZXMuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJteXNxbCIsImxvZ01lSW4iLCJjb25uZWN0aW9uIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiUkRTX0hPU1ROQU1FIiwiSE9TVCIsInVzZXIiLCJSRFNfVVNFUk5BTUUiLCJEQl9VU0VSIiwicGFzc3dvcmQiLCJSRFNfUEFTU1dPUkQiLCJEQl9QQVNTV09SRCIsImRhdGFiYXNlIiwiUkRTX0RCX05BTUUiLCJEQVRBQkFTRSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZ2V0UHJvZHVjdHMiLCJjYXRlZ29yeSIsImNiIiwicXVlcnkiLCJyZXN1bHQiLCJhZGREZWxpdmVyeSIsInBhcmFtcyIsInJlc3VsdHMiLCJhZGRJdGVtVG9PcmRlciIsImdldE9yZGVycyIsInVwZGF0ZVF1YW50aXR5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCLEMsQ0FDQTs7O0FBQ0EsSUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxVQUFELENBQXZCOztBQUNBLElBQU1HLFVBQVUsR0FBR0YsS0FBSyxDQUFDRyxnQkFBTixDQUF1QjtBQUN4Q0MsRUFBQUEsSUFBSSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsWUFBWixJQUE2Qk4sT0FBTyxDQUFDTyxJQURIO0FBRXhDQyxFQUFBQSxJQUFJLEVBQUVKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxZQUFaLElBQTJCVCxPQUFPLENBQUNVLE9BRkQ7QUFHeENDLEVBQUFBLFFBQVEsRUFBRVAsT0FBTyxDQUFDQyxHQUFSLENBQVlPLFlBQVosSUFBNEJaLE9BQU8sQ0FBQ2EsV0FITjtBQUl4Q0MsRUFBQUEsUUFBUSxFQUFFVixPQUFPLENBQUND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QUFELEVBQU0sSUFBTixDQUFGO0FBQ0QsS0FGRCxNQUVPO0FBQ0xLLE1BQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU9FLE1BQVAsQ0FBRjtBQUNEO0FBQ0osR0FOQztBQU9ELENBVkQ7O0FBWUFPLE1BQU0sQ0FBQ0MsT0FBUCxHQUFnQjtBQUFDWixFQUFBQSxXQUFXLEVBQVhBLFdBQUQ7QUFBY1MsRUFBQUEsU0FBUyxFQUFUQSxTQUFkO0FBQXlCSixFQUFBQSxXQUFXLEVBQVhBLFdBQXpCO0FBQXNDRyxFQUFBQSxjQUFjLEVBQWRBLGNBQXRDO0FBQXNERSxFQUFBQSxjQUFjLEVBQWRBO0FBQXRELENBQWhCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaHJpc3RvcGhlcm11cnJheS9Eb2N1bWVudHMvR2l0SHViL1NjYWxseXdhZ1Ntb2tlci9kYi8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbi8vIHJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpXG5jb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XG5jb25zdCBsb2dNZUluID0gcmVxdWlyZSgnLi9zZWNyZXQnKVxuY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICBob3N0OiBwcm9jZXNzLmVudi5SRFNfSE9TVE5BTUUgIHx8IGxvZ01lSW4uSE9TVCxcbiAgdXNlcjogcHJvY2Vzcy5lbnYuUkRTX1VTRVJOQU1FIHx8bG9nTWVJbi5EQl9VU0VSLFxuICBwYXNzd29yZDogcHJvY2Vzcy5lbnYuUkRTX1BBU1NXT1JEIHx8IGxvZ01lSW4uREJfUEFTU1dPUkQsXG4gIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5SRFNfREJfTkFNRSB8fCBsb2dNZUluLkRBVEFCQVNFXG59KTtcblxuY29ubmVjdGlvbi5jb25uZWN0KChlcnIpID0+IHtcbiAgaWYgKGVycikge1xuICAgIGNvbnNvbGUubG9nKFwiREIgQ09OTkVDVElPTiBGQUlMRURcIiwgZXJyKTtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc29sZS5sb2coXCJDb25uZWN0ZWQgdG8gQkJRIERCXCIpO1xuICBjb25zb2xlLmxvZyhwcm9jZXNzLmVudi5EQl9QQVNTV09SRClcbn0pO1xuXG5jb25zdCBnZXRQcm9kdWN0cyA9IChjYXRlZ29yeSwgY2IpID0+e1xuICBjb25uZWN0aW9uLnF1ZXJ5KGBTRUxFQ1QgKiBGUk9NIHByb2R1Y3QgV0hFUkUgY2F0ZWdvcnkgPSA/O2AsIFtjYXRlZ29yeV0sIChlcnIsIHJlc3VsdCkgPT57XG4gICAgaWYgKGVycikge1xuICAgICAgY2IgKGVyciwgbnVsbClcbiAgICB9IGVsc2Uge1xuICAgICAgY2IgKG51bGwsIHJlc3VsdClcbiAgfVxufSlcbn1cbmNvbnN0IGFkZERlbGl2ZXJ5ID0gKHBhcmFtcywgY2IpID0+IHtcbiAgY29ubmVjdGlvbi5xdWVyeSgnSU5TRVJUIElOVE8gb3JkZXJzIChzdHJlZXRfYWRkcmVzcywgbmFtZSwgY2l0eSwgb3JkZXJlZF9hdCwgc2NoZWR1bGVkX2RlbGl2ZXJ5LCBuZWlnaGJvcmhvb2QsIGVtYWlsLCBwaG9uZSkgVkFMVUVTICg/LCA/LCA/LCA/LCA/LCA/LCA/LCA/KTsnLCBwYXJhbXMsIChlcnIsIHJlc3VsdHMpPT57XG4gICAgaWYgKGVycikge1xuICAgICAgY2IoZXJyLCBudWxsKVxuICAgIH0gZWxzZSB7XG4gICAgICBjYihudWxsLCByZXN1bHRzKVxuICAgIH1cbiAgfSlcbn1cbmNvbnN0IGFkZEl0ZW1Ub09yZGVyPSAocGFyYW1zLCBjYikgPT4ge1xuICAvLyBjb25zb2xlLmxvZyhcInBhcmFtc1wiLCB0eXBlb2YgcGFyYW1zKVxuICBjb25uZWN0aW9uLnF1ZXJ5KCdJTlNFUlQgSU5UTyBvcmRlcl9pdGVtIChwcm9kdWN0X2lkLCBvcmRlcl9pZCwgcXVhbnRpdHkpIFZBTFVFUyAoPywgPywgPyk7JywgcGFyYW1zLCAoZXJyLCByZXN1bHQpPT57XG4gICAgaWYgKGVycikge1xuICAgICAgY2IoZXJyLCBudWxsKVxuICAgIH0gZWxzZSB7XG4gICAgICBjYihudWxsLCByZXN1bHQpXG4gICAgfVxuICB9KVxufVxuXG5jb25zdCBnZXRPcmRlcnMgPSAoY2IpPT57XG4gIGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCBvcmRlcnMuaWQsIG9yZGVyX2l0ZW0ucXVhbnRpdHksIHByb2R1Y3QucHJvZHVjdF9uYW1lLCBwcm9kdWN0LnByaWNlLCBvcmRlcnMuc2NoZWR1bGVkX2RlbGl2ZXJ5LCBvcmRlcnMubmVpZ2hib3Job29kLCBvcmRlcnMubmFtZSwgb3JkZXJzLnN0cmVldF9hZGRyZXNzLCBvcmRlcnMucGhvbmUsIG9yZGVycy5lbWFpbCBGUk9NICgob3JkZXJfaXRlbSBJTk5FUiBKT0lOIHByb2R1Y3QgT04gb3JkZXJfaXRlbS5wcm9kdWN0X2lkID0gcHJvZHVjdC5pZCkgSU5ORVIgSk9JTiBvcmRlcnMgb24gb3JkZXJfaXRlbS5vcmRlcl9pZCA9IG9yZGVycy5pZCk7JywgKGVyciwgcmVzdWx0KT0+e1xuICBpZiAoZXJyKSB7XG4gICAgY2IgKGVyciwgbnVsbClcbiAgfSBlbHNlIHtcbiAgICBjYiAobnVsbCwgcmVzdWx0KVxuICAgIGNvbnNvbGUubG9nKHJlc3VsdClcbiAgfVxufSlcbn1cbmNvbnN0IHVwZGF0ZVF1YW50aXR5ID0gKHBhcmFtcywgY2IpPT57XG4gIGNvbnNvbGUubG9nKFwicGFyYW1zIGluIHF1YW50aXR5IHVwZGF0ZVwiLCBwYXJhbXMpXG4gIGNvbnNvbGUubG9nKFwicXVlcnkgY2FsbGVkXCIpXG4gIGNvbm5lY3Rpb24ucXVlcnkoJ1VQREFURSBwcm9kdWN0IFNFVCBRVUFOVElUWSA9PyBXSEVSRSBwcm9kdWN0LnByb2R1Y3RfbmFtZT0/JywgcGFyYW1zLCAoZXJyLCByZXN1bHQpPT57XG4gICAgaWYgKGVycikge1xuICAgICAgY2IoZXJyLCBudWxsKVxuICAgIH0gZWxzZSB7XG4gICAgICBjYihudWxsLCByZXN1bHQpXG4gICAgfVxufSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPXtnZXRQcm9kdWN0cywgZ2V0T3JkZXJzLCBhZGREZWxpdmVyeSwgYWRkSXRlbVRvT3JkZXIsIHVwZGF0ZVF1YW50aXR5fSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "queries.js"
      ],
      "names": [
        "path",
        "require",
        "mysql",
        "logMeIn",
        "connection",
        "createConnection",
        "host",
        "process",
        "env",
        "RDS_HOSTNAME",
        "HOST",
        "user",
        "RDS_USERNAME",
        "DB_USER",
        "password",
        "RDS_PASSWORD",
        "DB_PASSWORD",
        "database",
        "RDS_DB_NAME",
        "DATABASE",
        "connect",
        "err",
        "console",
        "log",
        "getProducts",
        "category",
        "cb",
        "query",
        "result",
        "addDelivery",
        "params",
        "results",
        "addItemToOrder",
        "getOrders",
        "updateQuantity",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
      "sourcesContent": [
        "\nconst path = require('path')\n// require('dotenv').config()\nconst mysql = require('mysql');\nconst logMeIn = require('./secret')\nconst connection = mysql.createConnection({\n  host: process.env.RDS_HOSTNAME  || logMeIn.HOST,\n  user: process.env.RDS_USERNAME ||logMeIn.DB_USER,\n  password: process.env.RDS_PASSWORD || logMeIn.DB_PASSWORD,\n  database: process.env.RDS_DB_NAME || logMeIn.DATABASE\n});\n\nconnection.connect((err) => {\n  if (err) {\n    console.log(\"DB CONNECTION FAILED\", err);\n    return;\n  }\n  console.log(\"Connected to BBQ DB\");\n  console.log(process.env.DB_PASSWORD)\n});\n\nconst getProducts = (category, cb) =>{\n  connection.query(`SELECT * FROM product WHERE category = ?;`, [category], (err, result) =>{\n    if (err) {\n      cb (err, null)\n    } else {\n      cb (null, result)\n  }\n})\n}\nconst addDelivery = (params, cb) => {\n  connection.query('INSERT INTO orders (street_address, name, city, ordered_at, scheduled_delivery, neighborhood, email, phone) VALUES (?, ?, ?, ?, ?, ?, ?, ?);', params, (err, results)=>{\n    if (err) {\n      cb(err, null)\n    } else {\n      cb(null, results)\n    }\n  })\n}\nconst addItemToOrder= (params, cb) => {\n  // console.log(\"params\", typeof params)\n  connection.query('INSERT INTO order_item (product_id, order_id, quantity) VALUES (?, ?, ?);', params, (err, result)=>{\n    if (err) {\n      cb(err, null)\n    } else {\n      cb(null, result)\n    }\n  })\n}\n\nconst getOrders = (cb)=>{\n  connection.query('SELECT orders.id, order_item.quantity, product.product_name, product.price, orders.scheduled_delivery, orders.neighborhood, orders.name, orders.street_address, orders.phone, orders.email FROM ((order_item INNER JOIN product ON order_item.product_id = product.id) INNER JOIN orders on order_item.order_id = orders.id);', (err, result)=>{\n  if (err) {\n    cb (err, null)\n  } else {\n    cb (null, result)\n    console.log(result)\n  }\n})\n}\nconst updateQuantity = (params, cb)=>{\n  console.log(\"params in quantity update\", params)\n  console.log(\"query called\")\n  connection.query('UPDATE product SET QUANTITY =? WHERE product.product_name=?', params, (err, result)=>{\n    if (err) {\n      cb(err, null)\n    } else {\n      cb(null, result)\n    }\n})\n}\n\nmodule.exports ={getProducts, getOrders, addDelivery, addItemToOrder, updateQuantity}"
      ]
    },
    "sourceType": "script",
    "mtime": 1610225865848
  },
  "{\"sourceRoot\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"filename\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/secret.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/secret.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/secret.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/secret.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
        "sourceFileName": "secret.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar bbqSQL = {\n  HOST: 'localhost',\n  DB_USER: 'root',\n  DB_PASSWORD: 'Bruins2011!',\n  DATABASE: 'barbecue'\n};\nmodule.exports = bbqSQL;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlY3JldC5qcyJdLCJuYW1lcyI6WyJiYnFTUUwiLCJIT1NUIiwiREJfVVNFUiIsIkRCX1BBU1NXT1JEIiwiREFUQUJBU0UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE1BQU0sR0FBRztBQUNiQyxFQUFBQSxJQUFJLEVBQUUsV0FETztBQUViQyxFQUFBQSxPQUFPLEVBQUUsTUFGSTtBQUdiQyxFQUFBQSxXQUFXLEVBQUUsYUFIQTtBQUliQyxFQUFBQSxRQUFRLEVBQUU7QUFKRyxDQUFmO0FBTUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NocmlzdG9waGVybXVycmF5L0RvY3VtZW50cy9HaXRIdWIvU2NhbGx5d2FnU21va2VyL2RiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJicVNRTCA9IHtcbiAgSE9TVDogJ2xvY2FsaG9zdCcsXG4gIERCX1VTRVI6ICdyb290JyxcbiAgREJfUEFTU1dPUkQ6ICdCcnVpbnMyMDExIScsXG4gIERBVEFCQVNFOiAnYmFyYmVjdWUnXG59XG5tb2R1bGUuZXhwb3J0cyA9IGJicVNRTCJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "secret.js"
      ],
      "names": [
        "bbqSQL",
        "HOST",
        "DB_USER",
        "DB_PASSWORD",
        "DATABASE",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,WADO;AAEbC,EAAAA,OAAO,EAAE,MAFI;AAGbC,EAAAA,WAAW,EAAE,aAHA;AAIbC,EAAAA,QAAQ,EAAE;AAJG,CAAf;AAMAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
      "sourcesContent": [
        "const bbqSQL = {\n  HOST: 'localhost',\n  DB_USER: 'root',\n  DB_PASSWORD: 'Bruins2011!',\n  DATABASE: 'barbecue'\n}\nmodule.exports = bbqSQL"
      ]
    },
    "sourceType": "script",
    "mtime": 1610080998666
  }
}